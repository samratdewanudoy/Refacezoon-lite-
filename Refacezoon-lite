<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>RefaceZone Lite</title>
  <link rel="stylesheet" href="style.css" />
</head>
<body>
  <div class="container">
    <h1>RefaceZone Lite</h1>
    <input type="file" id="upload" accept="image/*" />
    <div class="editor">
      <canvas id="canvas"></canvas>
      <div class="controls">
        <label>Brightness: <input type="range" id="brightness" min="0" max="200" value="100" /></label>
        <label>Contrast: <input type="range" id="contrast" min="0" max="200" value="100" /></label>
        <label>Blur: <input type="range" id="blur" min="0" max="10" value="0" /></label>
        <label>Sharpness: <input type="range" id="sharpness" min="0" max="100" value="0" /></label>
      </div>
      <button id="download">Download Image</button>
    </div>
  </div>
  <script src="script.js"></script>
</body>
</html>


--
body {
  font-family: sans-serif;
  background: #f0f0f0;
  margin: 0;
  padding: 20px;
  text-align: center;
}

.container {
  max-width: 600px;
  margin: auto;
  background: white;
  padding: 20px;
  border-radius: 10px;
}

canvas {
  max-width: 100%;
  border: 1px solid #ccc;
  margin-bottom: 10px;
}

.controls {
  display: flex;
  flex-direction: column;
  gap: 10px;
  margin: 15px 0;
}

label {
  display: flex;
  justify-content: space-between;
}

button {
  padding: 10px 20px;
  font-size: 16px;
  background: #008cff;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}


---

const upload = document.getElementById("upload");
const canvas = document.getElementById("canvas");
const ctx = canvas.getContext("2d");

let img = new Image();

upload.addEventListener("change", (e) => {
  const file = e.target.files[0];
  if (!file) return;

  const reader = new FileReader();
  reader.onload = () => {
    img.src = reader.result;
  };
  reader.readAsDataURL(file);
});

img.onload = () => {
  canvas.width = img.width;
  canvas.height = img.height;
  ctx.drawImage(img, 0, 0);
  applyFilters();
};

const brightness = document.getElementById("brightness");
const contrast = document.getElementById("contrast");
const blur = document.getElementById("blur");
const sharpness = document.getElementById("sharpness");

[brightness, contrast, blur, sharpness].forEach((input) => {
  input.addEventListener("input", applyFilters);
});

function applyFilters() {
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  ctx.filter = `
    brightness(${brightness.value}%)
    contrast(${contrast.value}%)
    blur(${blur.value}px)
  `;
  ctx.drawImage(img, 0, 0);
  // Sharpness not natively supported via canvas, just placeholder for UI
}

document.getElementById("download").addEventListener("click", () => {
  const link = document.createElement("a");
  link.download = "refaced-image.png";
  link.href = canvas.toDataURL();
  link.click();
});
